generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username  String   @unique
  password  String
  email     String?  @unique
  role      Role     @default(USER)
  salt      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  permission Permission[]

  @@id([id])
  @@map("user")
}

model Permission {
  id         String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId     String   @map("user_id") @db.Uuid
  categoryId String   @map("category_id") @db.Uuid
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user     User     @relation(fields: [userId], references: [id], onUpdate: NoAction, onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onUpdate: NoAction, onDelete: Cascade)

  @@id([id])
  @@map("permission")
}

model Category {
  id    String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title String @map("title") @db.VarChar(256)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  subcategory SubCategory[]
  permission  Permission[]

  @@id([id])
  @@map("category")
}

model SubCategory {
  id         String @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String @map("title") @db.VarChar(256)
  categoryId String @map("category_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quiz Quiz[]

  category Category @relation(fields: [categoryId], references: [id], onUpdate: NoAction, onDelete: Cascade)

  @@id([id])
  @@map("sub_category")
}

model Quiz {
  id            String   @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text          String?  @map("text") @db.Text
  description   String?
  language      Language @default(UZ)
  image         String?
  subCategoryId String   @map("sub_category_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  option Option[]

  subCategory SubCategory @relation(fields: [subCategoryId], references: [id], onUpdate: NoAction, onDelete: Cascade)

  @@id([id])
  @@map("quiz")
}

model Option {
  id        String  @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  text      String
  isCorrect Boolean
  quizId    String  @map("quiz_id") @db.Uuid

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quiz Quiz @relation(fields: [quizId], references: [id], onUpdate: NoAction, onDelete: Cascade)

  @@id([id])
  @@map("option")
}

enum Language {
  UZ
  RU
  EN
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}
